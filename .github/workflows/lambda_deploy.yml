name: Deploy Lambda Function and Infrastructure

on:
  push:
    branches: [ separate-serverless ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Initialize Go Module
        run: |
          go mod init csw24-grupoE-ticket4u-gin
          go mod tidy

      - name: Build Go project
        run: |
          cd src
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ../bootstrap
        
      - name: Create Zip file for Lambda function
        run: zip -j function.zip bootstrap
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1  

      - name: Install Serverless Framework
        run: npm -g install serverless@3

      - name: Install Serverless Offline
        run: serverless plugin install -n serverless-offline --config serverless-lambda.yml

      - name: Serverless Deploy RDS
        run: |
          serverless deploy --config serverless-rds.yml

      - name: Serverless Deploy Lambda
        env:
          AWS_ROLE: ${{ secrets.AWS_IAM_ROLE }}
        run: |
          echo "AWS_ROLE=${{ secrets.AWS_IAM_ROLE }}" >> .env
          serverless deploy --config serverless-lambda.yml

      - name: Install Goose
        run: |
           go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Retrieve Database URL
        id: get-db-url
        run: |
          DB_URL=$(aws cloudformation describe-stacks --stack-name rds-setup-4-dev --query "Stacks[0].Outputs[?OutputKey=='DatabaseURL'].OutputValue" --output text)
          echo "DATABASE_URL=${DB_URL}" >> $GITHUB_ENV

      - name: Run Migrations
        run: |
          goose -dir ./infrastructure/database/migrations postgres '$DATABASE_URL' up
