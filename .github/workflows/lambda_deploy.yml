name: Deploy Lambda Function and Infrastructure

on:
  push:
    branches: [ serverless ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Initialize Go Module
        run: |
          go mod init csw24-grupoE-ticket4u-gin
          go mod tidy

      - name: Build Go project
        run: |
          cd src
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ../bootstrap
        
      - name: Create Zip file for Lambda function
        run: zip -j function.zip bootstrap
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1  

      - name: Install Serverless Framework
        run: npm -g install serverless@3

      - name: Install Serverless Offline
        run: serverless plugin install -n serverless-offline

      - name: Serverless Deploy
        env:
          DATABASE_URL: postgresql://postgres:xyV4YBeY8Qz2FuZ@postgres.cy3myhw5bsdp.us-east-1.rds.amazonaws.com:5432/postgres
          AWS_ROLE: arn:aws:iam::948675409837:role/LabRole
        run: |
          echo "DATABASE_URL=postgresql://postgres:xyV4YBeY8Qz2FuZ@postgres.cy3myhw5bsdp.us-east-1.rds.amazonaws.com:5432/postgres" >> .env
          echo "AWS_ROLE=arn:aws:iam::948675409837:role/LabRole" >> .env
          serverless deploy
